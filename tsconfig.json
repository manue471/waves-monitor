{
  "compilerOptions": {
    "target": "es2019" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "module": "commonjs" /* Specify what module code is generated. */,
    "lib": ["es2019"],
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "baseUrl": "." /* Specify the base directory to resolve non-relative module names. */,
    "paths": {
      "@src/*": ["./src/"],
      "@test/*": ["./test/"]
    } /* Specify a set of entries that re-map imports to additional lookup locations. */,
    "rootDirs": [
      "./src",
      "./test"
    ] /* Allow multiple folders to be treated as one when resolving modules. */,
    "resolveJsonModule": true /* Enable importing .json files. */,
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    "sourceMap": true /* Create source map files for emitted JavaScript files. */,
    "outDir": "dist" /* Specify an output folder for all emitted files. */,
    "removeComments": true /* Disable emitting comments. */,
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
    "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
    "noImplicitThis": true /* Enable error reporting when 'this' is given the type 'any'. */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
    "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */
  },
  "include": ["./src/**/*.ts", "./test/**/*.ts"],
  "exclude": ["./node_modules/*", "dist"]
}
